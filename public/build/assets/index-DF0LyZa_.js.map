{"version":3,"file":"index-DF0LyZa_.js","sources":["../../../resources/js/Pages/Users/components/create/index.tsx"],"sourcesContent":["import { UserCreateUpdateSkeleton } from \"@/components/skeletons/userCreateUpdateSkeleton\";\r\nimport Authenticated from \"@/Layouts/AuthenticatedLayout\";\r\nimport { PageProps } from \"@/types\";\r\nimport { Head, Link, useForm } from \"@inertiajs/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\nimport Form from \"./Form\";\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport SubmitBtn from \"@/components/ui/SubmitBtn\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport ImageUploader from \"@/components/ui/image-uploader\";\r\n\r\nexport default function Index({ auth }: PageProps) {\r\n    const { data, setData, post, errors, processing } = useForm({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        profile_image: \"\",\r\n        domain_id: \"\",\r\n        rate: \"\",\r\n        phone: \"\",\r\n        skype: \"\",\r\n        details: \"\",\r\n        offer_ids: \"\",\r\n        notification: \"yes\",\r\n        role: \"\",\r\n        isVerified: \"no\",\r\n        status: \"active\",\r\n    });\r\n    const [fetchedData, setFetchedData] = useState({\r\n        domains: [],\r\n        offers: [],\r\n    });\r\n    const [fetching, setFetching] = useState(true);\r\n    const role = auth.user.role;\r\n    const fetchData = async () => {\r\n        try {\r\n            const responses = await Promise.all([\r\n                fetch(\"/fetch/domains\"),\r\n                fetch(\"/fetch/offers\"),\r\n            ]);\r\n\r\n            const [domains, offers] = await Promise.all(\r\n                responses.map((res) =>\r\n                    res.ok ? res.json() : Promise.reject(res),\r\n                ),\r\n            );\r\n            setFetchedData({ domains, offers });\r\n            setFetching(false);\r\n        } catch (error) {\r\n            toast.error(\"Failed to fetch data. Please try again later.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    const updateUser = async (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        post(\"/dashboard/users\", {\r\n            onSuccess: () => {\r\n                toast.success(\"User created successfully\");\r\n            },\r\n        });\r\n    };\r\n    return (\r\n        <Authenticated user={auth.user}>\r\n            <Head title=\"Create new user\">\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Fill out the form below to add a new user. Please\r\n                            provide the necessary details including domain and\r\n                            offer information to ensure the user is set up\r\n                            correctly. Once all the fields are completed, click\r\n                            the submit button to create the user.\"\r\n                />\r\n            </Head>\r\n            <h2 className=\"text-lg\">Create new user</h2>\r\n            <p className=\"text-sm text-gray-500 hidden sm:block py-1\">\r\n                Fill out the form below to add a new user. Please provide the\r\n                necessary details including domain and offer information to\r\n                ensure the user is set up correctly.\r\n            </p>\r\n            <>\r\n                {fetching ? (\r\n                    <UserCreateUpdateSkeleton />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"bg-white dark:bg-slate-900 p-2 rounded flex justify-between items-center\">\r\n                            <div className=\"\">\r\n                                <Label>Upload Image</Label>\r\n                                <p className=\"text-sm\">\r\n                                    Upload and set a profile pin for user!\r\n                                </p>\r\n                                {data.profile_image && (\r\n                                    <p className=\"text-primary text-sm\">\r\n                                        {data.profile_image}\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                            <ImageUploader\r\n                                selected_image={data.profile_image}\r\n                                onUpload={(path: string) =>\r\n                                    setData({ ...data, profile_image: path })\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <form onSubmit={updateUser}>\r\n                            <Form\r\n                                domains={fetchedData.domains}\r\n                                offers={fetchedData.offers}\r\n                                role={role}\r\n                                data={data}\r\n                                setData={setData}\r\n                                errors={errors}\r\n                            />\r\n                            <hr className=\"my-3\" />\r\n                            <div className=\"w-full items-center flex gap-2\">\r\n                                <Link\r\n                                    href=\"/dashboard/users\"\r\n                                    className={`w-full ${buttonVariants({ variant: \"outline\" })}`}\r\n                                >\r\n                                    Cancel\r\n                                </Link>\r\n                                <SubmitBtn\r\n                                    label=\"Create\"\r\n                                    className=\"w-full\"\r\n                                    processing={processing}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </>\r\n        </Authenticated>\r\n    );\r\n}\r\n"],"names":["Index","auth","data","setData","post","errors","processing","useForm","fetchedData","setFetchedData","useState","fetching","setFetching","role","fetchData","responses","domains","offers","res","toast","useEffect","updateUser","event","jsxs","Authenticated","jsx","Head","Fragment","UserCreateUpdateSkeleton","Label","ImageUploader","path","Form","Link","buttonVariants","SubmitBtn"],"mappings":"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"}