{"version":3,"file":"index-C8GRhzkX.js","sources":["../../../resources/js/Pages/Users/components/update/index.tsx"],"sourcesContent":["import { UserCreateUpdateSkeleton } from \"@/components/skeletons/userCreateUpdateSkeleton\";\r\nimport Authenticated from \"@/Layouts/AuthenticatedLayout\";\r\nimport { PageProps, User } from \"@/types\";\r\nimport { Head, Link, useForm } from \"@inertiajs/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport SubmitBtn from \"@/components/ui/SubmitBtn\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport ImageUploader from \"@/components/ui/image-uploader\";\r\nimport Form from \"../create/Form\";\r\n\r\nexport default function Index({\r\n    auth,\r\n    user,\r\n    offer_unique_ids,\r\n}: PageProps<{ user: User; offer_unique_ids: any }>) {\r\n    const { data, setData, put, errors, processing } = useForm({\r\n        username: user.username,\r\n        email: user.email,\r\n        password: \"\",\r\n        profile_image: user.profile_image,\r\n        domain_id: user.domain_id,\r\n        rate: user.rate,\r\n        phone: user.phone,\r\n        skype: user.skype,\r\n        details: user.details,\r\n        offer_ids: offer_unique_ids,\r\n        notification: user.notification,\r\n        role: user.role,\r\n        isVerified: user.isVerified,\r\n        status: user.status,\r\n    });\r\n    const [fetchedData, setFetchedData] = useState({\r\n        domains: [],\r\n        offers: [],\r\n    });\r\n    const [fetching, setFetching] = useState(true);\r\n    const role = auth.user.role;\r\n    const fetchData = async () => {\r\n        try {\r\n            const responses = await Promise.all([\r\n                fetch(\"/fetch/domains\"),\r\n                fetch(\"/fetch/offers\"),\r\n            ]);\r\n\r\n            const [domains, offers] = await Promise.all(\r\n                responses.map((res) =>\r\n                    res.ok ? res.json() : Promise.reject(res),\r\n                ),\r\n            );\r\n            setFetchedData({ domains, offers });\r\n            setFetching(false);\r\n        } catch (error) {\r\n            toast.error(\"Failed to fetch data. Please try again later.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    const updateUser = async (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        put(`/dashboard/users/${user.unique_id}`, {\r\n            onSuccess: () => {\r\n                toast.success(\"User updated successfully\");\r\n            },\r\n        });\r\n    };\r\n    return (\r\n        <Authenticated user={auth.user}>\r\n            <Head title={`Update ${user.id} - ${data.username}`}>\r\n                <meta name=\"description\" content={data.details} />\r\n            </Head>\r\n            <h2 className=\"text-lg\">\r\n                {user.id} - {data.username}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 hidden sm:block py-1\">\r\n                {data.details}\r\n            </p>\r\n            <>\r\n                {fetching ? (\r\n                    <UserCreateUpdateSkeleton />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"bg-white dark:bg-slate-900 p-2 rounded flex justify-between items-center\">\r\n                            <div className=\"\">\r\n                                <Label>Upload Image</Label>\r\n                                <p className=\"text-sm\">\r\n                                    Upload and set a profile pin for user!\r\n                                </p>\r\n                                {data.profile_image && (\r\n                                    <p className=\"text-primary text-sm\">\r\n                                        {data.profile_image}\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                            <ImageUploader\r\n                                onUpload={(path: string) =>\r\n                                    setData({ ...data, profile_image: path })\r\n                                }\r\n                                selected_image={data.profile_image}\r\n                            />\r\n                        </div>\r\n                        <form onSubmit={updateUser}>\r\n                            <Form\r\n                                domains={fetchedData.domains}\r\n                                offers={fetchedData.offers}\r\n                                role={role}\r\n                                data={data}\r\n                                setData={setData}\r\n                                errors={errors}\r\n                                update={false}\r\n                            />\r\n                            <hr className=\"my-3\" />\r\n                            <div className=\"w-full items-center flex gap-2\">\r\n                                <Link\r\n                                    href=\"/dashboard/users\"\r\n                                    className={`w-full ${buttonVariants({ variant: \"outline\" })}`}\r\n                                >\r\n                                    Cancel\r\n                                </Link>\r\n                                <SubmitBtn\r\n                                    label=\"Update\"\r\n                                    className=\"w-full\"\r\n                                    processing={processing}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </>\r\n        </Authenticated>\r\n    );\r\n}\r\n"],"names":["Index","auth","user","offer_unique_ids","data","setData","put","errors","processing","useForm","fetchedData","setFetchedData","useState","fetching","setFetching","role","fetchData","responses","domains","offers","res","toast","useEffect","updateUser","event","jsxs","Authenticated","jsx","Head","Fragment","UserCreateUpdateSkeleton","Label","ImageUploader","path","Form","Link","buttonVariants","SubmitBtn"],"mappings":"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"}