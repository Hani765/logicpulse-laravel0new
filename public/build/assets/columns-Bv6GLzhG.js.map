{"version":3,"file":"columns-Bv6GLzhG.js","sources":["../../../resources/js/Pages/Trackers/components/columns.tsx"],"sourcesContent":["import { ColumnDef } from \"@tanstack/react-table\";\r\nimport { ArrowUpDown } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport Dropdown from \"./dropdown\";\r\nimport { TrackerType } from \"@/types\";\r\n\r\n\r\nexport const Columns = (): ColumnDef<TrackerType>[] => [\r\n    {\r\n        id: \"select\",\r\n        header: ({ table }) => (\r\n            <Checkbox\r\n                checked={\r\n                    table.getIsAllPageRowsSelected() ||\r\n                    (table.getIsSomePageRowsSelected() && \"indeterminate\")\r\n                }\r\n                onCheckedChange={(value) =>\r\n                    table.toggleAllPageRowsSelected(!!value)\r\n                }\r\n                aria-label=\"Select all\"\r\n            />\r\n        ),\r\n        cell: ({ row }) => (\r\n            <Checkbox\r\n                checked={row.getIsSelected()}\r\n                onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n                aria-label=\"Select row\"\r\n            />\r\n        ),\r\n        enableSorting: false,\r\n        enableHiding: false,\r\n    },\r\n    {\r\n        accessorKey: \"id\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() =>\r\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\r\n                    }\r\n                >\r\n                    ID\r\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n            );\r\n        },\r\n        cell: (info) => info.row.index + 1,\r\n    },\r\n    {\r\n        accessorKey: \"name\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() =>\r\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\r\n                    }\r\n                >\r\n                    Tracker Name\r\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"param\",\r\n        header: \"Parm\",\r\n    },\r\n    {\r\n        accessorKey: \"value\",\r\n        header: \"Value\",\r\n    },\r\n    {\r\n        accessorKey: \"clicks\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() =>\r\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\r\n                    }\r\n                >\r\n                    Clicks\r\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"conversions\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() =>\r\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\r\n                    }\r\n                >\r\n                    Conversions\r\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"cvr\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() =>\r\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\r\n                    }\r\n                >\r\n                    CVR\r\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"created_at\",\r\n        header: \"Create At\",\r\n        cell: ({ row }) => {\r\n            const date = new Date(row.getValue(\"created_at\"));\r\n            const formated = date.toLocaleDateString();\r\n            return <div className=\"font-medium\">{formated}</div>;\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"updated_at\",\r\n        header: \"Updated At\",\r\n        cell: ({ row }) => {\r\n            const date = new Date(row.getValue(\"updated_at\"));\r\n            const formated = date.toLocaleDateString();\r\n            return <div className=\"font-medium\">{formated}</div>;\r\n        },\r\n    },\r\n    {\r\n        accessorKey: \"status\",\r\n        header: ({ column }) => {\r\n            return (\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() =>\r\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\r\n                    }\r\n                >\r\n                    Status\r\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n                </Button>\r\n            );\r\n        },\r\n        cell: ({ row }) => {\r\n            const status = String(row.getValue(\"status\"));\r\n            return (\r\n                <>\r\n                    {status === \"active\" ? (\r\n                        <div className=\"text-green-500\">Active</div>\r\n                    ) : (\r\n                        <div className=\"text-red-500\">Inactive</div>\r\n                    )}\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        header: \"Actions\",\r\n        id: \"actions\",\r\n        cell: ({ row }) => {\r\n            const rowCurrent = row.original;\r\n            return (\r\n                <>\r\n                    <Dropdown rowCurrent={rowCurrent} />\r\n                </>\r\n            );\r\n        },\r\n    },\r\n];\r\n"],"names":["Columns","table","jsx","Checkbox","value","row","column","jsxs","Button","ArrowUpDown","info","formated","status","Fragment","rowCurrent","Dropdown"],"mappings":"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"}