{"version":3,"file":"Step2-C6EoB6Kl.js","sources":["../../../resources/js/Pages/Offers/components/create/steps/Step2.tsx"],"sourcesContent":["// Step2.tsx\r\nimport InputError from \"@/components/InputError\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { LabelInputContainer } from \"@/components/ui/LabelInputContainer\";\r\nimport SearchSelect from \"@/components/ui/search-select\";\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectItem,\r\n    SelectTrigger,\r\n    SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Head } from \"@inertiajs/react\";\r\nimport { ReloadIcon } from \"@radix-ui/react-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\n\r\ninterface StepProps {\r\n    formData: any;\r\n    errors: any;\r\n    setDataFetched: any;\r\n    dataFetched: any;\r\n    setFormData: (data: any) => void;\r\n    currentStep: number;\r\n    setCurrentStep: any;\r\n    setFetchedData: any;\r\n    fetchedData: any;\r\n}\r\n\r\nconst Step2: React.FC<StepProps> = ({\r\n    formData: data,\r\n    setFormData: setData,\r\n    errors,\r\n    dataFetched,\r\n    currentStep,\r\n    setCurrentStep,\r\n    setDataFetched,\r\n    setFetchedData,\r\n    fetchedData,\r\n}) => {\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n    const fetchData = async () => {\r\n        setFetching(true);\r\n        try {\r\n            const responses = await Promise.all([\r\n                fetch(\"/fetch/domains\"),\r\n                fetch(\"/fetch/networks\"),\r\n                fetch(\"/fetch/categories\"),\r\n            ]);\r\n\r\n            const [domains, networks, categories] = await Promise.all(\r\n                responses.map((res) =>\r\n                    res.ok ? res.json() : Promise.reject(res),\r\n                ),\r\n            );\r\n\r\n            setFetchedData({ domains, networks, categories });\r\n            setFetching(false);\r\n            setDataFetched(true);\r\n        } catch (error) {\r\n            toast.error(\"Failed to fetch data. Please try again later.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (dataFetched === false) {\r\n            fetchData();\r\n        }\r\n    }, [dataFetched]);\r\n    const [tags, setTags] = useState<string[]>(\r\n        data.keywords ? data.keywords.split(\",\") : [],\r\n    );\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        const value = e.currentTarget.value.trim();\r\n        if ((e.key === \"Enter\" || e.key === \",\") && value) {\r\n            if (!tags.includes(value)) {\r\n                const updatedTags = [...tags, value];\r\n                setTags(updatedTags);\r\n                setData({ ...data, tags: updatedTags.join(\",\") }); // Convert array to comma-separated string\r\n            }\r\n            e.currentTarget.value = \"\";\r\n        }\r\n    };\r\n\r\n    const handleDeleteTag = (tagToDelete: string) => {\r\n        const updatedTags = tags.filter((tag) => tag !== tagToDelete);\r\n        setTags(updatedTags);\r\n        setData({ ...data, tags: updatedTags.join(\",\") }); // Convert array to comma-separated string\r\n    };\r\n    return (\r\n        <div>\r\n            <Head title=\"Network Details\" />\r\n            {fetching ? (\r\n                <div className=\"space-y-4 mt-4\">\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\r\n                        <Skeleton className=\"h-10\" />\r\n                        <Skeleton className=\"h-10\" />\r\n                        <Skeleton className=\"h-10\" />\r\n                    </div>\r\n                    <Skeleton className=\"h-10\" />\r\n                    <div className=\"w-full grid grid-cols-3 gap-2 items-center\">\r\n                        <Skeleton className=\"h-10 col-span-2\" />\r\n                        <Skeleton className=\"h-10\" />\r\n                    </div>\r\n                    <Skeleton className=\"h-10\" />\r\n                </div>\r\n            ) : (\r\n                <div className=\"space-y-2 bg-white p-4 rounded dark:bg-slate-900\">\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\r\n                        <LabelInputContainer\r\n                            type=\"number\"\r\n                            value={data.age}\r\n                            onChange={(e) =>\r\n                                setData({\r\n                                    ...data,\r\n                                    age: e.target.value,\r\n                                })\r\n                            }\r\n                            required\r\n                            helperText=\"18\"\r\n                            errorMessage={errors.age}\r\n                            bottomMessage=\"Specify the minimum age required to avail this offer.\"\r\n                            label=\"Age:\"\r\n                            id=\"age\"\r\n                        />\r\n                        <LabelInputContainer\r\n                            type=\"number\"\r\n                            value={data.rate}\r\n                            onChange={(e) =>\r\n                                setData({\r\n                                    ...data,\r\n                                    rate: e.target.value,\r\n                                })\r\n                            }\r\n                            required\r\n                            helperText=\"150\"\r\n                            errorMessage={errors.rate}\r\n                            bottomMessage=\"Enter the rate for this offer in your local currency.\"\r\n                            label=\"Rate:\"\r\n                            id=\"rate\"\r\n                        />\r\n                        <LabelInputContainer\r\n                            type=\"number\"\r\n                            value={data.encryption}\r\n                            onChange={(e) =>\r\n                                setData({\r\n                                    ...data,\r\n                                    encryption: e.target.value,\r\n                                })\r\n                            }\r\n                            helperText=\"****\"\r\n                            errorMessage={errors.encryption}\r\n                            bottomMessage=\"Specify the encryption level or code for the offer, if applicable.\"\r\n                            label=\"Encryption:\"\r\n                            id=\"encryption\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"w-full\">\r\n                        <SearchSelect\r\n                            label=\"Select Network\"\r\n                            items={fetchedData.networks}\r\n                            onSelect={(unique_id: string) =>\r\n                                setData({ ...data, network_id: unique_id })\r\n                            }\r\n                            selected_value={data.network_id}\r\n                            bottomMessage=\"Choose the network associated with this offer.\"\r\n                            errorMessage={errors.network_id}\r\n                        />\r\n                    </div>\r\n                    <div className=\"w-full grid grid-cols-3 gap-4 items-center\">\r\n                        <div className=\"col-span-2\">\r\n                            <SearchSelect\r\n                                label=\"Select Domain\"\r\n                                items={fetchedData.domains}\r\n                                onSelect={(unique_id: string) =>\r\n                                    setData({ ...data, domain_id: unique_id })\r\n                                }\r\n                                selected_value={data.domain_id}\r\n                                bottomMessage=\"Select the domain where this offer will be available.\"\r\n                                errorMessage={errors.domain_id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"w-full\">\r\n                            <Label>Proxy check</Label>\r\n                            <Select\r\n                                required\r\n                                value={data.proxy}\r\n                                onValueChange={(proxy) =>\r\n                                    setData({ ...data, proxy })\r\n                                }\r\n                            >\r\n                                <SelectTrigger className=\"\">\r\n                                    <SelectValue placeholder=\"proxy\" />\r\n                                </SelectTrigger>\r\n                                <SelectContent side=\"top\">\r\n                                    {[\"yes\", \"no\"].map((statusOption) => (\r\n                                        <SelectItem\r\n                                            key={statusOption}\r\n                                            value={statusOption}\r\n                                        >\r\n                                            {statusOption}\r\n                                        </SelectItem>\r\n                                    ))}\r\n                                </SelectContent>\r\n                            </Select>\r\n                            <InputError message={errors.proxy} />\r\n                            <p className=\"text-gray-500 mt-1 text-sm whitespace-nowrap\">\r\n                                Seletet for thsi offer to check that check proxy\r\n                                or not?\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <SearchSelect\r\n                        label=\"Select Category\"\r\n                        items={fetchedData.categories}\r\n                        onSelect={(unique_id: string) =>\r\n                            setData({ ...data, category_id: unique_id })\r\n                        }\r\n                        selected_value={data.category_id}\r\n                        bottomMessage=\"Pick a category that best describes the offer.\"\r\n                        errorMessage={errors.category_id}\r\n                    />\r\n                    <div className=\"w-full\">\r\n                        <Label>Related Tags</Label>\r\n                        <div className=\"border rounded p-2 flex flex-wrap gap-2 bg-gray-50 dark:bg-gray-800\">\r\n                            {tags.map((tag, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"bg-blue-200 text-blue-700 rounded px-2 py-1 flex items-center\"\r\n                                >\r\n                                    {tag}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"ml-2 text-red-500\"\r\n                                        onClick={() => handleDeleteTag(tag)}\r\n                                    >\r\n                                        &times;\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                            <input\r\n                                type=\"text\"\r\n                                onKeyDown={handleKeyDown}\r\n                                placeholder=\"Type a tag and press enter or comma\"\r\n                                className=\"flex-1 border-none outline-none bg-transparent\"\r\n                            />\r\n                        </div>\r\n                        <p className=\"text-gray-500 mt-1 text-sm\">\r\n                            Type tags and press enter or comma to add.\r\n                            (max:1000)\r\n                        </p>\r\n                        <InputError message={errors.keywords} />\r\n                    </div>\r\n                    <div className=\"flex w-full justify-end items-center mt-4\">\r\n                        <div className=\"w-full flex justify-end items-center mr-2\">\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                size=\"icon\"\r\n                                onClick={fetchData}\r\n                            >\r\n                                <ReloadIcon />\r\n                            </Button>\r\n                        </div>\r\n                        {currentStep > 1 && (\r\n                            <Button\r\n                                onClick={() => setCurrentStep(currentStep - 1)}\r\n                                className=\"mr-2\"\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                            onClick={() => setCurrentStep(currentStep + 1)}\r\n                            className=\"mr-2\"\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step2;\r\n"],"names":["Step2","data","setData","errors","dataFetched","currentStep","setCurrentStep","setDataFetched","setFetchedData","fetchedData","fetching","setFetching","useState","fetchData","responses","domains","networks","categories","res","toast","useEffect","tags","setTags","handleKeyDown","e","value","updatedTags","handleDeleteTag","tagToDelete","tag","jsx","Head","jsxs","Skeleton","LabelInputContainer","SearchSelect","unique_id","Label","Select","proxy","SelectTrigger","SelectValue","SelectContent","statusOption","SelectItem","InputError","index","Button","ReloadIcon"],"mappings":"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"}