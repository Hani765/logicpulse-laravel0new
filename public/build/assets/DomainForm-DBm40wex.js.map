{"version":3,"file":"DomainForm-DBm40wex.js","sources":["../../../resources/js/Pages/Domains/components/update/DomainForm.tsx"],"sourcesContent":["import { LabelInputContainer } from \"@/components/ui/LabelInputContainer\";\r\nimport { useForm } from \"@inertiajs/react\";\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectItem,\r\n    SelectTrigger,\r\n    SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { FormEventHandler } from \"react\";\r\nimport { toast } from \"sonner\";\r\nimport InputError from \"@/components/InputError\";\r\nimport { MultiSelect } from \"@/components/ui/multi-select\";\r\nimport { Link } from \"lucide-react\";\r\nimport SubmitBtn from \"@/components/ui/SubmitBtn\";\r\nexport function DomainForm({\r\n    domainData,\r\n    userData,\r\n}: {\r\n    domainData: any;\r\n    userData: any;\r\n}) {\r\n    const { put, data, setData, errors, processing } = useForm({\r\n        name: domainData?.domain.name,\r\n        selectedUsers: domainData?.user_ids || \"\",\r\n        status: domainData?.domain.status,\r\n    });\r\n    const update: FormEventHandler = (e) => {\r\n        const id = domainData?.domain.unique_id;\r\n        e.preventDefault();\r\n        put(`/dashboard/domains/${id}`, {\r\n            onSuccess: () => {\r\n                toast.success(\"Domain has been updated!\");\r\n            },\r\n            onError: (errors) => {\r\n                toast.error(errors.name);\r\n            },\r\n        });\r\n    };\r\n    const onSelected = (unique_ids: string) => {\r\n        setData({ ...data, selectedUsers: unique_ids });\r\n    };\r\n    return (\r\n        <form className=\"flex flex-col gap-4 p-2 sm:p-0\" onSubmit={update}>\r\n            <LabelInputContainer\r\n                label=\"Domain\"\r\n                description=\"Please enter a valid URL for the domain.\"\r\n                type=\"url\"\r\n                value={data.name}\r\n                onChange={(e) => setData(\"name\", e.target.value)}\r\n                required\r\n                id=\"large-url\"\r\n                helperText=\"https://www.example.com\"\r\n                errorMessage={errors.name}\r\n                Icon={Link}\r\n            />\r\n            <MultiSelect\r\n                selectedItems={data.selectedUsers}\r\n                items={userData}\r\n                label=\"Select Users\"\r\n                onSelect={onSelected}\r\n                descriptoin=\"Select the users those you want to assign that domain.\"\r\n            />\r\n            <div className=\"flex gap-2 justify-end items-center\">\r\n                <div className=\"w-34\">\r\n                    <Select\r\n                        value={data.status}\r\n                        onValueChange={(status) => setData({ ...data, status })}\r\n                    >\r\n                        <SelectTrigger className=\"h-10\">\r\n                            <SelectValue placeholder=\"Select status\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent side=\"top\">\r\n                            {[\"active\", \"inactive\"].map((statusOption) => (\r\n                                <SelectItem\r\n                                    key={statusOption}\r\n                                    value={statusOption}\r\n                                >\r\n                                    {statusOption}\r\n                                </SelectItem>\r\n                            ))}\r\n                        </SelectContent>\r\n                    </Select>\r\n                    <InputError message={errors.status} />\r\n                </div>\r\n                <SubmitBtn processing={processing} label=\"Update domain\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n"],"names":["DomainForm","domainData","userData","put","data","setData","errors","processing","useForm","update","e","id","toast","onSelected","unique_ids","jsxs","jsx","LabelInputContainer","Link","MultiSelect","Select","status","SelectTrigger","SelectValue","SelectContent","statusOption","SelectItem","InputError","SubmitBtn"],"mappings":"uwBAeO,SAASA,EAAW,CACvB,WAAAC,EACA,SAAAC,CACJ,EAGG,CACC,KAAM,CAAE,IAAAC,EAAK,KAAAC,EAAM,QAAAC,EAAS,OAAAC,EAAQ,WAAAC,GAAeC,EAAQ,CACvD,KAAMP,GAAA,YAAAA,EAAY,OAAO,KACzB,eAAeA,GAAA,YAAAA,EAAY,WAAY,GACvC,OAAQA,GAAA,YAAAA,EAAY,OAAO,MAAA,CAC9B,EACKQ,EAA4BC,GAAM,CAC9B,MAAAC,EAAKV,GAAA,YAAAA,EAAY,OAAO,UAC9BS,EAAE,eAAe,EACbP,EAAA,sBAAsBQ,CAAE,GAAI,CAC5B,UAAW,IAAM,CACbC,EAAM,QAAQ,0BAA0B,CAC5C,EACA,QAAUN,GAAW,CACXM,EAAA,MAAMN,EAAO,IAAI,CAC3B,CAAA,CACH,CAAA,EAECO,EAAcC,GAAuB,CACvCT,EAAQ,CAAE,GAAGD,EAAM,cAAeU,CAAY,CAAA,CAAA,EAElD,OACKC,EAAAA,KAAA,OAAA,CAAK,UAAU,iCAAiC,SAAUN,EACvD,SAAA,CAAAO,EAAA,IAACC,EAAA,CACG,MAAM,SACN,YAAY,2CACZ,KAAK,MACL,MAAOb,EAAK,KACZ,SAAWM,GAAML,EAAQ,OAAQK,EAAE,OAAO,KAAK,EAC/C,SAAQ,GACR,GAAG,YACH,WAAW,0BACX,aAAcJ,EAAO,KACrB,KAAMY,CAAA,CACV,EACAF,EAAA,IAACG,EAAA,CACG,cAAef,EAAK,cACpB,MAAOF,EACP,MAAM,eACN,SAAUW,EACV,YAAY,wDAAA,CAChB,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,sCACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACX,SAAA,CAAAA,EAAA,KAACK,EAAA,CACG,MAAOhB,EAAK,OACZ,cAAgBiB,GAAWhB,EAAQ,CAAE,GAAGD,EAAM,OAAAiB,EAAQ,EAEtD,SAAA,CAAAL,EAAAA,IAACM,GAAc,UAAU,OACrB,eAACC,EAAY,CAAA,YAAY,gBAAgB,CAC7C,CAAA,EACAP,EAAAA,IAACQ,EAAc,CAAA,KAAK,MACf,SAAA,CAAC,SAAU,UAAU,EAAE,IAAKC,GACzBT,EAAA,IAACU,EAAA,CAEG,MAAOD,EAEN,SAAAA,CAAA,EAHIA,CAKZ,CAAA,EACL,CAAA,CAAA,CACJ,EACCT,EAAAA,IAAAW,EAAA,CAAW,QAASrB,EAAO,MAAQ,CAAA,CAAA,EACxC,EACCU,EAAAA,IAAAY,EAAA,CAAU,WAAArB,EAAwB,MAAM,eAAgB,CAAA,CAAA,EAC7D,CACJ,CAAA,CAAA,CAER"}