{"version":3,"file":"LabelInputContainer-XQCpEK7k.js","sources":["../../../resources/js/components/ui/popover-component.tsx","../../../resources/js/components/ui/LabelInputContainer.tsx"],"sourcesContent":["import {\n    Tooltip,\n    TooltipContent,\n    TooltipProvider,\n    TooltipTrigger,\n} from \"./tooltip\";\nimport { QuestionMarkCircledIcon } from \"@radix-ui/react-icons\";\n\nexport default function PopoverComponent({\n    description,\n}: {\n    description: string;\n}) {\n    return (\n        <TooltipProvider>\n            <Tooltip>\n                <TooltipTrigger type=\"button\">\n                    <QuestionMarkCircledIcon className=\"w-4 h-4\" />\n                </TooltipTrigger>\n                <TooltipContent\n                    side=\"bottom\"\n                    className=\"inline-block text-sm font-light text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm w-72 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-400\"\n                >\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n                        Details\n                    </h3>\n                    <p>{description}</p>\n                </TooltipContent>\n            </Tooltip>\n        </TooltipProvider>\n    );\n}\n","import { cn } from \"@/lib/utils\";\nimport { Label } from \"./label\";\nimport { Input } from \"./input\";\nimport {\n    Tooltip,\n    TooltipContent,\n    TooltipProvider,\n    TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { QuestionMarkCircledIcon } from \"@radix-ui/react-icons\";\nimport { FaQuestionCircle } from \"react-icons/fa\";\nimport PopoverComponent from \"./popover-component\";\n\nexport const LabelInputContainer = ({\n    className,\n    autoFocus,\n    inputClassName,\n    label,\n    description,\n    errorMessage,\n    successMessage,\n    bottomMessage,\n    disabled,\n    required,\n    helperText,\n    type,\n    value,\n    onChange,\n    Icon,\n    id,\n    inputRef,\n}: {\n    className?: string;\n    inputClassName?: string;\n    autoFocus?: boolean;\n    label?: string;\n    description?: string;\n    errorMessage?: string;\n    bottomMessage?: string;\n    successMessage?: string;\n    disabled?: boolean;\n    required?: boolean;\n    helperText?: string;\n    type: string;\n    value?: string;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    Icon?: React.ComponentType<any>;\n    id?: string;\n    inputRef?: React.RefObject<HTMLInputElement>;\n}) => {\n    return (\n        <div className={cn(\"space-y-1\", className)}>\n            {label && (\n                <Label\n                    className={`flex gap-1 items-center ${\n                        errorMessage && \"text-red-500\"\n                    }`}\n                    htmlFor={id || \"input\"}\n                >\n                    {Icon && (\n                        <Icon size={16} className=\"text-muted-foreground\" />\n                    )}\n                    {label}\n                    {description && (\n                        <PopoverComponent description={description} />\n                    )}\n                </Label>\n            )}\n            <Input\n                type={type}\n                value={value}\n                ref={inputRef}\n                onChange={onChange}\n                disabled={disabled}\n                className={cn(inputClassName)}\n                autoFocus={autoFocus}\n                required={required}\n                placeholder={helperText}\n                id={id || \"input\"}\n            />\n            {errorMessage && (\n                <p className=\"text-sm text-red-500\">{errorMessage}</p>\n            )}\n            {successMessage && (\n                <p className=\"text-sm text-green-500\">{successMessage}</p>\n            )}\n            {bottomMessage && (\n                <p className=\"text-sm text-gray-500\">{bottomMessage}</p>\n            )}\n        </div>\n    );\n};\n"],"names":["PopoverComponent","description","jsx","TooltipProvider","jsxs","Tooltip","TooltipTrigger","QuestionMarkCircledIcon","TooltipContent","LabelInputContainer","className","autoFocus","inputClassName","label","errorMessage","successMessage","bottomMessage","disabled","required","helperText","type","value","onChange","Icon","id","inputRef","cn","Label","Input"],"mappings":"8OAQA,SAAwBA,EAAiB,CACrC,YAAAC,CACJ,EAEG,CAEK,OAAAC,EAAAA,IAACC,EACG,CAAA,SAAAC,EAAAA,KAACC,EACG,CAAA,SAAA,CAAAH,EAAAA,IAACI,GAAe,KAAK,SACjB,eAACC,EAAwB,CAAA,UAAU,UAAU,CACjD,CAAA,EACAH,EAAA,KAACI,EAAA,CACG,KAAK,SACL,UAAU,mMAEV,SAAA,CAACN,EAAA,IAAA,KAAA,CAAG,UAAU,8CAA8C,SAE5D,UAAA,EACAA,EAAAA,IAAC,KAAG,SAAYD,CAAA,CAAA,CAAA,CAAA,CAAA,CACpB,CAAA,CACJ,CACJ,CAAA,CAER,CClBO,MAAMQ,EAAsB,CAAC,CAChC,UAAAC,EACA,UAAAC,EACA,eAAAC,EACA,MAAAC,EACA,YAAAZ,EACA,aAAAa,EACA,eAAAC,EACA,cAAAC,EACA,SAAAC,EACA,SAAAC,EACA,WAAAC,EACA,KAAAC,EACA,MAAAC,EACA,SAAAC,EACA,KAAAC,EACA,GAAAC,EACA,SAAAC,CACJ,WAoBS,MAAI,CAAA,UAAWC,EAAG,YAAahB,CAAS,EACpC,SAAA,CACGG,GAAAT,EAAA,KAACuB,EAAA,CACG,UAAW,2BACPb,GAAgB,cACpB,GACA,QAASU,GAAM,QAEd,SAAA,CAAAD,GACIrB,EAAA,IAAAqB,EAAA,CAAK,KAAM,GAAI,UAAU,wBAAwB,EAErDV,EACAZ,GACIC,EAAA,IAAAF,EAAA,CAAiB,YAAAC,CAA0B,CAAA,CAAA,CAAA,CAEpD,EAEJC,EAAA,IAAC0B,EAAA,CACG,KAAAR,EACA,MAAAC,EACA,IAAKI,EACL,SAAAH,EACA,SAAAL,EACA,UAAWS,EAAGd,CAAc,EAC5B,UAAAD,EACA,SAAAO,EACA,YAAaC,EACb,GAAIK,GAAM,OAAA,CACd,EACCV,GACGZ,EAAA,IAAC,IAAE,CAAA,UAAU,uBAAwB,SAAaY,EAAA,EAErDC,GACGb,EAAA,IAAC,IAAE,CAAA,UAAU,yBAA0B,SAAea,EAAA,EAEzDC,GACGd,EAAA,IAAC,IAAE,CAAA,UAAU,wBAAyB,SAAcc,CAAA,CAAA,CAAA,EAE5D"}