{"version":3,"file":"Step3-Z_SIM2Zo.js","sources":["../../../resources/js/Pages/Offers/components/create/steps/Step3.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n    Select,\r\n    SelectContent,\r\n    SelectItem,\r\n    SelectTrigger,\r\n    SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Head } from \"@inertiajs/react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport * as z from \"zod\";\r\nimport { step3Schema } from \"./schemas\";\r\n\r\n// Define the types for the form fields and props\r\ntype DeviceType =\r\n    | \"all\"\r\n    | \"windows\"\r\n    | \"mobiles\"\r\n    | \"linux\"\r\n    | \"android\"\r\n    | \"iOs\"\r\n    | \"others\";\r\n\r\ninterface StepProps {\r\n    formData: any;\r\n    setFormData: (data: any) => void;\r\n    currentStep: number;\r\n    setCurrentStep: (step: number) => void;\r\n}\r\n\r\ninterface InputField {\r\n    url: string;\r\n    deviceType: DeviceType | \"\";\r\n}\r\n\r\n// Zod schema for validation\r\n\r\nconst Step3: React.FC<StepProps> = ({\r\n    formData: data,\r\n    setFormData: setData,\r\n    currentStep,\r\n    setCurrentStep,\r\n}) => {\r\n    const [fieldErrors, setFieldErrors] = useState<\r\n        Array<{ url?: string; deviceType?: string }>\r\n    >([]);\r\n\r\n    const deviceTypes: DeviceType[] = [\r\n        \"all\",\r\n        \"windows\",\r\n        \"mobiles\",\r\n        \"linux\",\r\n        \"android\",\r\n        \"iOs\",\r\n    ];\r\n\r\n    const handleAddInput = () => {\r\n        setData((prevState: any) => ({\r\n            ...prevState,\r\n            urls: [...prevState.urls, { url: \"\", deviceType: \"\" }],\r\n        }));\r\n        setFieldErrors((prevErrors) => [...prevErrors, {}]);\r\n    };\r\n\r\n    const handleRemoveInput = (index: number) => {\r\n        setData((prevState: any) => ({\r\n            ...prevState,\r\n            urls: prevState.urls.filter((_: any, i: number) => i !== index),\r\n        }));\r\n        setFieldErrors((prevErrors) =>\r\n            prevErrors.filter((_, i) => i !== index),\r\n        );\r\n    };\r\n\r\n    const handleInputChange = (\r\n        index: number,\r\n        field: keyof InputField,\r\n        value: string | DeviceType,\r\n    ) => {\r\n        setData((prevState: any) => {\r\n            const newUrls = prevState.urls.map(\r\n                (input: InputField, i: number) =>\r\n                    i === index ? { ...input, [field]: value } : input,\r\n            );\r\n            return { ...prevState, urls: newUrls };\r\n        });\r\n        // Clear error for the field being changed\r\n        setFieldErrors((prevErrors) => {\r\n            const newErrors = [...prevErrors];\r\n            newErrors[index] = { ...newErrors[index], [field]: undefined };\r\n            return newErrors;\r\n        });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        try {\r\n            step3Schema.parse(data);\r\n            setFieldErrors([]);\r\n            return true;\r\n        } catch (error) {\r\n            if (error instanceof z.ZodError) {\r\n                const newErrors: Array<{ url?: string; deviceType?: string }> =\r\n                    [];\r\n                data.urls.forEach((_: any, index: any) => {\r\n                    newErrors[index] = {};\r\n                });\r\n                error.errors.forEach((err) => {\r\n                    const path = err.path;\r\n                    if (path.length >= 2 && typeof path[1] === \"number\") {\r\n                        const index = path[1];\r\n                        const field = path[2] as keyof InputField;\r\n                        newErrors[index][field] = err.message;\r\n                    }\r\n                });\r\n                setFieldErrors(newErrors);\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        if (validateForm()) {\r\n            setCurrentStep(currentStep + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-full border-t sm:border-0 overflow-y-hidden p-2\">\r\n                <Head title=\"Additional Details\" />\r\n                <AnimatePresence>\r\n                    {data.urls.map((input: InputField, index: number) => (\r\n                        <motion.div\r\n                            className=\"mt-4 space-y-2\"\r\n                            key={index}\r\n                            initial={{ opacity: 0, y: 30 }}\r\n                            animate={{ opacity: 1, y: 0 }}\r\n                            exit={{ opacity: 0, y: 30 }}\r\n                            transition={{ duration: 0.8 }}\r\n                        >\r\n                            <div className=\"w-full flex gap-2 bg-white p-2 border rounded\">\r\n                                <div className=\"w-full pt-1\">\r\n                                    <Label>Offer Url</Label>\r\n                                    <Input\r\n                                        type=\"url\"\r\n                                        required\r\n                                        placeholder=\"https://www.example-offer.com\"\r\n                                        className={`py-4 ${\r\n                                            fieldErrors[index]?.url\r\n                                                ? \"border-red-500\"\r\n                                                : \"\"\r\n                                        }`}\r\n                                        value={input.url}\r\n                                        onChange={(e) =>\r\n                                            handleInputChange(\r\n                                                index,\r\n                                                \"url\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {fieldErrors[index]?.url && (\r\n                                        <p className=\"text-red-500 text-sm mt-1\">\r\n                                            {fieldErrors[index]?.url}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"w-[300px]\">\r\n                                    <Label>Device Type</Label>\r\n                                    <Select\r\n                                        required\r\n                                        value={input.deviceType}\r\n                                        onValueChange={(value: DeviceType) =>\r\n                                            handleInputChange(\r\n                                                index,\r\n                                                \"deviceType\",\r\n                                                value,\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <SelectTrigger\r\n                                            className={`h-10 my-1 ${\r\n                                                fieldErrors[index]?.deviceType\r\n                                                    ? \"border-red-500\"\r\n                                                    : \"\"\r\n                                            }`}\r\n                                        >\r\n                                            <SelectValue placeholder=\"Device Type\" />\r\n                                        </SelectTrigger>\r\n                                        <SelectContent side=\"top\">\r\n                                            {deviceTypes.map((statusOption) => (\r\n                                                <SelectItem\r\n                                                    key={statusOption}\r\n                                                    value={statusOption}\r\n                                                >\r\n                                                    {statusOption}\r\n                                                </SelectItem>\r\n                                            ))}\r\n                                        </SelectContent>\r\n                                    </Select>\r\n                                    {fieldErrors[index]?.deviceType && (\r\n                                        <p className=\"text-red-500 text-sm mt-1\">\r\n                                            {fieldErrors[index]?.deviceType}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    onClick={() => handleRemoveInput(index)}\r\n                                    className=\"text-red-500 bg-transparent mt-6 hover:bg-transparent hover:text-red-600\"\r\n                                >\r\n                                    <MdDelete />\r\n                                </Button>\r\n                            </div>\r\n                        </motion.div>\r\n                    ))}\r\n                </AnimatePresence>\r\n\r\n                <Button\r\n                    type=\"button\"\r\n                    onClick={handleAddInput}\r\n                    variant=\"ringHover\"\r\n                    className=\"mt-2\"\r\n                >\r\n                    Add URL\r\n                </Button>\r\n            </div>\r\n            <div className=\"flex w-full justify-end items-center mt-4\">\r\n                {currentStep > 1 && (\r\n                    <Button\r\n                        onClick={() => setCurrentStep(currentStep - 1)}\r\n                        className=\"mr-2\"\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                )}\r\n                <Button onClick={handleNextClick} className=\"mr-2\">\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Step3;\r\n"],"names":["Step3","data","setData","currentStep","setCurrentStep","fieldErrors","setFieldErrors","useState","deviceTypes","handleAddInput","prevState","prevErrors","handleRemoveInput","index","_","i","handleInputChange","field","value","newUrls","input","newErrors","validateForm","step3Schema","error","z.ZodError","err","path","handleNextClick","jsxs","Fragment","jsx","Head","AnimatePresence","motion","Label","Input","_a","e","_b","_c","Select","SelectTrigger","_d","SelectValue","SelectContent","statusOption","SelectItem","_e","_f","Button","MdDelete"],"mappings":"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"}