{"version":3,"file":"create-CRm4Yt_k.js","sources":["../../../resources/js/Pages/Users/components/create/create.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport { toast } from \"sonner\";\r\nimport CreateForm from \"./createForm\";\r\nimport {\r\n    Drawer,\r\n    DrawerClose,\r\n    DrawerContent,\r\n    DrawerDescription,\r\n    DrawerHeader,\r\n    DrawerTitle,\r\n    DrawerTrigger,\r\n} from \"@/components/ui/drawer\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { UserCreateUpdateSkeleton } from \"@/components/skeletons/userCreateUpdateSkeleton\";\r\n\r\ninterface CreateProps {\r\n    role: string;\r\n}\r\n\r\nexport default function Create({ role }: CreateProps) {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({\r\n        domains: [],\r\n        offers: [],\r\n    });\r\n    const [fetching, setFetching] = useState(true);\r\n\r\n    const fetchData = async () => {\r\n        setOpen(true);\r\n        try {\r\n            const responses = await Promise.all([\r\n                fetch(\"/fetch/domains\"),\r\n                fetch(\"/fetch/offers\"),\r\n            ]);\r\n\r\n            const [domains, offers] = await Promise.all(\r\n                responses.map((res) =>\r\n                    res.ok ? res.json() : Promise.reject(res)\r\n                )\r\n            );\r\n\r\n            setData({ domains, offers });\r\n            setFetching(false);\r\n        } catch (error) {\r\n            toast.error(\"Failed to fetch data. Please try again later.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            open={open}\r\n            onOpenChange={setOpen}\r\n            direction=\"top\"\r\n            dismissible={false}\r\n        >\r\n            <div className=\"bg-white border border-gray-200 dark:border-gray-700 dark:bg-gray-900 w-full shadow-sm flex justify-between items-center p-2 rounded\">\r\n                <h3 className=\"font-semibold\">Users</h3>\r\n                <DrawerTrigger>\r\n                    <p\r\n                        onClick={fetchData}\r\n                        className={`${buttonVariants({\r\n                            variant: \"gooeyRight\",\r\n                        })}`}\r\n                    >\r\n                        Create New\r\n                    </p>\r\n                </DrawerTrigger>\r\n            </div>\r\n            <DrawerContent\r\n                className=\"h-full rounded-none z-50 overflow-visible\"\r\n                onInteractOutside={(e) => e.preventDefault()}\r\n            >\r\n                <div className=\"h-screen overflow-y-auto p-4\">\r\n                    <DrawerHeader>\r\n                        <div className=\"flex justify-between items-center\">\r\n                            <DrawerTitle>Create new user</DrawerTitle>\r\n                            <DrawerClose>\r\n                                <MdClose />\r\n                            </DrawerClose>\r\n                        </div>\r\n                        <DrawerDescription>\r\n                            Fill out the form below to add a new user. Please\r\n                            provide the necessary details including domain and\r\n                            offer information to ensure the user is set up\r\n                            correctly. Once all the fields are completed, click\r\n                            the submit button to create the user.\r\n                        </DrawerDescription>\r\n                    </DrawerHeader>\r\n                    {fetching ? (\r\n                        <UserCreateUpdateSkeleton />\r\n                    ) : (\r\n                        <>\r\n                            <CreateForm\r\n                                domains={data.domains}\r\n                                offers={data.offers}\r\n                                doneFunction={() => setOpen(false)}\r\n                                role={role}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </DrawerContent>\r\n        </Drawer>\r\n    );\r\n}\r\n"],"names":["Create","role","open","setOpen","useState","data","setData","fetching","setFetching","fetchData","responses","domains","offers","res","toast","jsxs","Drawer","jsx","DrawerTrigger","buttonVariants","DrawerContent","e","DrawerHeader","DrawerTitle","DrawerClose","MdClose","DrawerDescription","UserCreateUpdateSkeleton","Fragment","CreateForm"],"mappings":"4iCAsBwB,SAAAA,GAAO,CAAE,KAAAC,GAAqB,CAClD,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAS,EAAK,EAChC,CAACC,EAAMC,CAAO,EAAIF,WAAS,CAC7B,QAAS,CAAC,EACV,OAAQ,CAAC,CAAA,CACZ,EACK,CAACG,EAAUC,CAAW,EAAIJ,WAAS,EAAI,EAEvCK,EAAY,SAAY,CAC1BN,EAAQ,EAAI,EACR,GAAA,CACM,MAAAO,EAAY,MAAM,QAAQ,IAAI,CAChC,MAAM,gBAAgB,EACtB,MAAM,eAAe,CAAA,CACxB,EAEK,CAACC,EAASC,CAAM,EAAI,MAAM,QAAQ,IACpCF,EAAU,IAAKG,GACXA,EAAI,GAAKA,EAAI,OAAS,QAAQ,OAAOA,CAAG,CAC5C,CAAA,EAGIP,EAAA,CAAE,QAAAK,EAAS,OAAAC,CAAA,CAAQ,EAC3BJ,EAAY,EAAK,OACL,CACZM,EAAM,MAAM,+CAA+C,CAC/D,CAAA,EAIA,OAAAC,EAAA,KAACC,EAAA,CACG,KAAAd,EACA,aAAcC,EACd,UAAU,MACV,YAAa,GAEb,SAAA,CAACY,EAAAA,KAAA,MAAA,CAAI,UAAU,uIACX,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,gBAAgB,SAAK,QAAA,QAClCC,EACG,CAAA,SAAAD,EAAA,IAAC,IAAA,CACG,QAASR,EACT,UAAW,GAAGU,EAAe,CACzB,QAAS,YACZ,CAAA,CAAC,GACL,SAAA,YAAA,CAAA,EAGL,CAAA,EACJ,EACAF,EAAA,IAACG,EAAA,CACG,UAAU,4CACV,kBAAoBC,GAAMA,EAAE,eAAe,EAE3C,SAAAN,EAAA,KAAC,MAAI,CAAA,UAAU,+BACX,SAAA,CAAAA,OAACO,EACG,CAAA,SAAA,CAACP,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAAAE,EAAAA,IAACM,GAAY,SAAe,iBAAA,CAAA,EAC3BN,EAAA,IAAAO,EAAA,CACG,SAACP,EAAA,IAAAQ,EAAA,CAAQ,CAAA,EACb,CAAA,EACJ,EACAR,EAAAA,IAACS,GAAkB,SAMnB,+OAAA,CAAA,CAAA,EACJ,EACCnB,EACGU,EAAAA,IAACU,EAAyB,CAAA,CAAA,EAGtBV,EAAAA,IAAAW,EAAA,SAAA,CAAA,SAAAX,EAAA,IAACY,EAAA,CACG,QAASxB,EAAK,QACd,OAAQA,EAAK,OACb,aAAc,IAAMF,EAAQ,EAAK,EACjC,KAAAF,CAAA,CAAA,EAER,CAAA,EAER,CAAA,CACJ,CAAA,CAAA,CAAA,CAGZ"}