{"version":3,"file":"columns-DdBgNJMp.js","sources":["../../../resources/js/Pages/Domains/components/columns.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport Dropdown from \"./dropdown\";\nimport { DomainsType } from \"@/types\";\nimport { DataTableColumnHeader } from \"@/components/tableComponents/data-table-column-header\";\nimport { formatDate } from \"@/lib/utils\";\nimport Progress from \"@/components/charts/table-chart\";\nimport Status from \"@/components/tableComponents/status\";\n\nexport const Columns = (): ColumnDef<DomainsType>[] => [\n    {\n        id: \"select\",\n        header: ({ table }) => (\n            <Checkbox\n                checked={\n                    table.getIsAllPageRowsSelected() ||\n                    (table.getIsSomePageRowsSelected() && \"indeterminate\")\n                }\n                onCheckedChange={(value) =>\n                    table.toggleAllPageRowsSelected(!!value)\n                }\n                aria-label=\"Select all\"\n            />\n        ),\n        cell: ({ row }) => (\n            <Checkbox\n                checked={row.getIsSelected()}\n                onCheckedChange={(value) => row.toggleSelected(!!value)}\n                aria-label=\"Select row\"\n            />\n        ),\n        enableSorting: false,\n        enableHiding: false,\n    },\n    {\n        accessorKey: \"id\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"ID\" />\n        ),\n    },\n    {\n        accessorKey: \"name\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Domain Name\" />\n        ),\n    },\n    {\n        accessorKey: \"clicks\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Clicks\" />\n        ),\n    },\n    {\n        accessorKey: \"conversions\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Conversions\" />\n        ),\n    },\n    {\n        accessorKey: \"cvr\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"CVR\" />\n        ),\n    },\n    {\n        accessorKey: \"progress\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Progress\" />\n        ),\n        cell: ({ row }) => {\n            const progress = row.getValue(\"progress\");\n            return <Progress progress={progress} />;\n        },\n    },\n    {\n        accessorKey: \"created_at\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Created At\" />\n        ),\n        cell: ({ cell }) => formatDate(cell.getValue() as Date),\n    },\n    {\n        accessorKey: \"updated_at\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Updated At\" />\n        ),\n        cell: ({ cell }) => formatDate(cell.getValue() as Date),\n    },\n    {\n        accessorKey: \"status\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Status\" />\n        ),\n        cell: ({ row }) => {\n            const status = String(row.getValue(\"status\"));\n            return <Status status={status} />;\n        },\n    },\n    {\n        id: \"actions\",\n        cell: ({ row }) => {\n            const rowCurrent = row.original;\n            return (\n                <>\n                    <Dropdown rowCurrent={rowCurrent} />\n                </>\n            );\n        },\n    },\n];\n"],"names":["Columns","table","jsx","Checkbox","value","row","column","DataTableColumnHeader","progress","Progress","cell","formatDate","status","Status","rowCurrent","Fragment","Dropdown"],"mappings":"+nCAUO,MAAMA,EAAU,IAAgC,CACnD,CACI,GAAI,SACJ,OAAQ,CAAC,CAAE,MAAAC,CAAA,IACPC,EAAA,IAACC,EAAA,CACG,QACIF,EAAM,yBAAA,GACLA,EAAM,0BAA+B,GAAA,gBAE1C,gBAAkBG,GACdH,EAAM,0BAA0B,CAAC,CAACG,CAAK,EAE3C,aAAW,YAAA,CACf,EAEJ,KAAM,CAAC,CAAE,IAAAC,CAAA,IACLH,EAAA,IAACC,EAAA,CACG,QAASE,EAAI,cAAc,EAC3B,gBAAkBD,GAAUC,EAAI,eAAe,CAAC,CAACD,CAAK,EACtD,aAAW,YAAA,CACf,EAEJ,cAAe,GACf,aAAc,EAClB,EACA,CACI,YAAa,KACb,OAAQ,CAAC,CAAE,OAAAE,KACNJ,EAAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,IAAK,CAAA,CAE1D,EACA,CACI,YAAa,OACb,OAAQ,CAAC,CAAE,OAAAA,KACNJ,EAAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,aAAc,CAAA,CAEnE,EACA,CACI,YAAa,SACb,OAAQ,CAAC,CAAE,OAAAA,KACNJ,EAAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,QAAS,CAAA,CAE9D,EACA,CACI,YAAa,cACb,OAAQ,CAAC,CAAE,OAAAA,KACNJ,EAAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,aAAc,CAAA,CAEnE,EACA,CACI,YAAa,MACb,OAAQ,CAAC,CAAE,OAAAA,KACNJ,EAAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,KAAM,CAAA,CAE3D,EACA,CACI,YAAa,WACb,OAAQ,CAAC,CAAE,OAAAA,CAAA,IACNJ,EAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,WAAW,EAE5D,KAAM,CAAC,CAAE,IAAAD,KAAU,CACT,MAAAG,EAAWH,EAAI,SAAS,UAAU,EACjC,OAAAH,MAACO,GAAS,SAAAD,EAAoB,CAAA,CAE7C,EACA,CACI,YAAa,aACb,OAAQ,CAAC,CAAE,OAAAF,CAAA,IACNJ,EAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,aAAa,EAE9D,KAAM,CAAC,CAAE,KAAAI,CAAA,IAAWC,EAAWD,EAAK,SAAkB,CAAA,CAC1D,EACA,CACI,YAAa,aACb,OAAQ,CAAC,CAAE,OAAAJ,CAAA,IACNJ,EAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,aAAa,EAE9D,KAAM,CAAC,CAAE,KAAAI,CAAA,IAAWC,EAAWD,EAAK,SAAkB,CAAA,CAC1D,EACA,CACI,YAAa,SACb,OAAQ,CAAC,CAAE,OAAAJ,CAAA,IACNJ,EAAA,IAAAK,EAAA,CAAsB,OAAAD,EAAgB,MAAM,SAAS,EAE1D,KAAM,CAAC,CAAE,IAAAD,KAAU,CACf,MAAMO,EAAS,OAAOP,EAAI,SAAS,QAAQ,CAAC,EACrC,OAAAH,MAACW,GAAO,OAAAD,EAAgB,CAAA,CAEvC,EACA,CACI,GAAI,UACJ,KAAM,CAAC,CAAE,IAAAP,KAAU,CACf,MAAMS,EAAaT,EAAI,SACvB,OAEQH,EAAA,IAAAa,EAAA,SAAA,CAAA,SAAAb,EAAA,IAACc,EAAS,CAAA,WAAAF,CAAwB,CAAA,EACtC,CAAA,CAER,CAER"}