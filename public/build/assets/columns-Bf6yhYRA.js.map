{"version":3,"file":"columns-Bf6yhYRA.js","sources":["../../../resources/js/Pages/Users/components/columns.tsx"],"sourcesContent":["import { ColumnDef } from \"@tanstack/react-table\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport Dropdown from \"./dropdown\";\nimport { UserType } from \"@/types\";\nimport ProfilePic from \"@/components/ui/profile_pic\";\nimport { DataTableColumnHeader } from \"@/components/tableComponents/data-table-column-header\";\nimport Status from \"@/components/tableComponents/status\";\nimport Progress from \"@/components/charts/table-chart\";\n\nexport const Columns = (): ColumnDef<UserType>[] => [\n    {\n        id: \"select\",\n        header: ({ table }) => (\n            <Checkbox\n                checked={\n                    table.getIsAllPageRowsSelected() ||\n                    (table.getIsSomePageRowsSelected() && \"indeterminate\")\n                }\n                onCheckedChange={(value) =>\n                    table.toggleAllPageRowsSelected(!!value)\n                }\n                aria-label=\"Select all\"\n            />\n        ),\n        cell: ({ row }) => (\n            <Checkbox\n                checked={row.getIsSelected()}\n                onCheckedChange={(value) => row.toggleSelected(!!value)}\n                aria-label=\"Select row\"\n            />\n        ),\n        enableSorting: false,\n        enableHiding: false,\n    },\n    {\n        accessorKey: \"id\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"ID\" />;\n        },\n        cell: (info) => info.row.index + 1,\n    },\n    {\n        accessorKey: \"profile_image\",\n        header: ({ column }) => {\n            return (\n                <DataTableColumnHeader column={column} title=\"Profile Pic\" />\n            );\n        },\n        cell: ({ row }) => {\n            const path = String(row.getValue(\"profile_image\"));\n\n            return (\n                <>\n                    <ProfilePic path={path} />\n                </>\n            );\n        },\n    },\n    {\n        accessorKey: \"name\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Name\" />;\n        },\n    },\n    {\n        accessorKey: \"username\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Username\" />;\n        },\n    },\n    {\n        accessorKey: \"email\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Email\" />;\n        },\n    },\n    {\n        accessorKey: \"phone\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Phonr\" />;\n        },\n    },\n    {\n        accessorKey: \"age\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Age\" />;\n        },\n    },\n    {\n        accessorKey: \"rate\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Rate\" />;\n        },\n    },\n    {\n        accessorKey: \"clicks\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Clicks\" />;\n        },\n    },\n    {\n        accessorKey: \"conversions\",\n        header: ({ column }) => {\n            return (\n                <DataTableColumnHeader column={column} title=\"Conversions\" />\n            );\n        },\n    },\n    {\n        accessorKey: \"cvr\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"CVR\" />;\n        },\n    },\n    {\n        accessorKey: \"progress\",\n        header: ({ column }) => (\n            <DataTableColumnHeader column={column} title=\"Progress\" />\n        ),\n        cell: ({ row }) => {\n            const progress = row.getValue(\"progress\");\n            return <Progress progress={progress} />;\n        },\n    },\n    {\n        accessorKey: \"role\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Role\" />;\n        },\n        cell: ({ row }) => {\n            const role = String(row.getValue(\"role\"));\n            return (\n                <>\n                    {role === \"admin\" ? (\n                        <div className=\"text-green-500\">Admin</div>\n                    ) : role === \"manager\" ? (\n                        <div className=\"text-blue-500\">Manager</div>\n                    ) : (\n                        <div className=\"text-red-500\">User</div>\n                    )}\n                </>\n            );\n        },\n    },\n    {\n        accessorKey: \"manager_username\",\n        header: ({ column }) => {\n            return (\n                <DataTableColumnHeader column={column} title=\"Manager Name\" />\n            );\n        },\n    },\n    {\n        accessorKey: \"admin_username\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Admin Name\" />;\n        },\n    },\n    {\n        accessorKey: \"created_at\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Create At\" />;\n        },\n        cell: ({ row }) => {\n            const date = new Date(row.getValue(\"created_at\"));\n            const formated = date.toLocaleDateString();\n            return <div className=\"font-medium\">{formated}</div>;\n        },\n    },\n    {\n        accessorKey: \"updated_at\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Update At\" />;\n        },\n        cell: ({ row }) => {\n            const date = new Date(row.getValue(\"updated_at\"));\n            const formated = date.toLocaleDateString();\n            return <div className=\"font-medium\">{formated}</div>;\n        },\n    },\n    {\n        accessorKey: \"status\",\n        header: ({ column }) => {\n            return <DataTableColumnHeader column={column} title=\"Status\" />;\n        },\n        cell: ({ row }) => {\n            const status = String(row.getValue(\"status\"));\n            return <Status status={status} />;\n        },\n    },\n    {\n        header: \"Actions\",\n        id: \"actions\",\n        cell: ({ row }) => {\n            const rowCurrent = row.original;\n            return <Dropdown rowCurrent={rowCurrent} />;\n        },\n    },\n];\n"],"names":["Columns","table","jsx","Checkbox","value","row","column","DataTableColumnHeader","info","path","Fragment","ProfilePic","progress","Progress","role","formated","status","Status","rowCurrent","Dropdown"],"mappings":"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"}