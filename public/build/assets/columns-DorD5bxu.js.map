{"version":3,"file":"columns-DorD5bxu.js","sources":["../../../resources/js/Pages/Settings/Account/Partials/columns.tsx"],"sourcesContent":["import { ColumnDef } from \"@tanstack/react-table\";\nimport { ArrowUpDown } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { SettingsType } from \"@/types\";\nimport Dropdown from \"./dropdown\";\nexport const Columns = (error?: string): ColumnDef<SettingsType>[] => [\n    {\n        accessorKey: \"id\",\n        header: ({ column }) => {\n            return (\n                <Button\n                    variant=\"ghost\"\n                    onClick={() =>\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\n                    }\n                >\n                    ID\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                </Button>\n            );\n        },\n        cell: (info) => info.row.index + 1,\n    },\n    {\n        accessorKey: \"key\",\n        header: \"Key\",\n    },\n    {\n        accessorKey: \"value\",\n        header: \"Value\",\n    },\n    {\n        accessorKey: \"status\",\n        header: ({ column }) => {\n            return (\n                <Button\n                    variant=\"ghost\"\n                    onClick={() =>\n                        column.toggleSorting(column.getIsSorted() === \"asc\")\n                    }\n                >\n                    Status\n                    <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                </Button>\n            );\n        },\n        cell: ({ row }) => {\n            const status = String(row.getValue(\"status\"));\n            return (\n                <>\n                    {status === \"active\" ? (\n                        <div className=\"text-green-500\">Active</div>\n                    ) : status === \"paused\" ? (\n                        <div className=\"text-blue-500\">Paused</div>\n                    ) : (\n                        <div className=\"text-red-500\">Inactive</div>\n                    )}\n                </>\n            );\n        },\n    },\n    {\n        header: \"Actions\",\n        id: \"actions\",\n        cell: ({ row }) => {\n            const rowCurrent = row.original;\n            return (\n                <>\n                    <Dropdown rowCurrent={rowCurrent} error={error} />\n                </>\n            );\n        },\n    },\n];\n"],"names":["Columns","error","column","jsxs","Button","jsx","ArrowUpDown","info","row","status","Fragment","rowCurrent","Dropdown"],"mappings":"8zBAKa,MAAAA,EAAWC,GAA8C,CAClE,CACI,YAAa,KACb,OAAQ,CAAC,CAAE,OAAAC,KAEHC,EAAA,KAACC,EAAA,CACG,QAAQ,QACR,QAAS,IACLF,EAAO,cAAcA,EAAO,gBAAkB,KAAK,EAE1D,SAAA,CAAA,KAEGG,EAAAA,IAACC,EAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CAC1C,EAGR,KAAOC,GAASA,EAAK,IAAI,MAAQ,CACrC,EACA,CACI,YAAa,MACb,OAAQ,KACZ,EACA,CACI,YAAa,QACb,OAAQ,OACZ,EACA,CACI,YAAa,SACb,OAAQ,CAAC,CAAE,OAAAL,KAEHC,EAAA,KAACC,EAAA,CACG,QAAQ,QACR,QAAS,IACLF,EAAO,cAAcA,EAAO,gBAAkB,KAAK,EAE1D,SAAA,CAAA,SAEGG,EAAAA,IAACC,EAAY,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CAC1C,EAGR,KAAM,CAAC,CAAE,IAAAE,KAAU,CACf,MAAMC,EAAS,OAAOD,EAAI,SAAS,QAAQ,CAAC,EAExC,OAAAH,EAAAA,IAAAK,EAAAA,SAAA,CACK,aAAW,SACRL,EAAA,IAAC,OAAI,UAAU,iBAAiB,SAAM,QAAA,CAAA,EACtCI,IAAW,eACV,MAAI,CAAA,UAAU,gBAAgB,SAAM,QAAA,CAAA,QAEpC,MAAI,CAAA,UAAU,eAAe,SAAA,UAAQ,CAAA,EAE9C,CAAA,CAGZ,EACA,CACI,OAAQ,UACR,GAAI,UACJ,KAAM,CAAC,CAAE,IAAAD,KAAU,CACf,MAAMG,EAAaH,EAAI,SACvB,OAEQH,EAAA,IAAAK,WAAA,CAAA,SAAAL,EAAAA,IAACO,EAAS,CAAA,WAAAD,EAAwB,MAAAV,CAAc,CAAA,EACpD,CAAA,CAER,CAER"}