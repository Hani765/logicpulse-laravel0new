{"version":3,"file":"Form-Gl2KuXsP.js","sources":["../../../resources/js/Pages/Domains/components/create/Form.tsx"],"sourcesContent":["\"use client\";\nimport React, { FormEventHandler } from \"react\";\nimport { LabelInputContainer } from \"@/components/ui/LabelInputContainer\";\nimport { useForm, usePage } from \"@inertiajs/react\";\nimport InputError from \"@/components/InputError\";\nimport { toast } from \"sonner\";\nimport { Link } from \"lucide-react\";\nimport SubmitBtn from \"@/components/ui/SubmitBtn\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\nimport { Label } from \"@/components/ui/label\";\nimport { PageProps } from \"@/types\";\n\nexport default function Form({ status }: { status?: string }) {\n    const page = usePage<PageProps>();\n    const userRole = page.props.auth.user.role;\n    const { data, setData, post, processing, errors, reset } = useForm({\n        name: \"\",\n        visiblity: \"private\",\n    });\n\n    const submit: FormEventHandler = (e) => {\n        e.preventDefault();\n        post(\"/dashboard/domains\", {\n            onSuccess: () => {\n                toast.success(\"Domain has been created!\");\n                reset();\n            },\n            onError: (errors) => {\n                toast.error(errors.name);\n            },\n        });\n    };\n\n    return (\n        <form className=\"w-full p-2 sm:p-0\" onSubmit={submit}>\n            <div className=\"w-full flex flex-col gap-2 items-end mb-2\">\n                <div className=\"w-full\">\n                    <LabelInputContainer\n                        label=\"Domain\"\n                        description=\"Please enter a valid URL for the domain.\"\n                        type=\"url\"\n                        value={data.name}\n                        onChange={(e) => setData(\"name\", e.target.value)}\n                        required\n                        id=\"large-url\"\n                        helperText=\"https://www.example.com\"\n                        errorMessage={errors.name}\n                        Icon={Link}\n                    />\n                    {userRole === \"administrator\" && (\n                        <div className=\"\">\n                            <Label>Visible</Label>\n                            <Select\n                                value={data.visiblity}\n                                onValueChange={(visiblity) =>\n                                    setData({ ...data, visiblity })\n                                }\n                            >\n                                <SelectTrigger className=\"h-10\">\n                                    <SelectValue placeholder=\"Select status\" />\n                                </SelectTrigger>\n                                <SelectContent side=\"top\">\n                                    {[\"private\", \"public\"].map(\n                                        (visibleOption) => (\n                                            <SelectItem\n                                                key={visibleOption}\n                                                value={visibleOption}\n                                            >\n                                                {visibleOption}\n                                            </SelectItem>\n                                        ),\n                                    )}\n                                </SelectContent>\n                            </Select>\n                        </div>\n                    )}\n                </div>\n                <SubmitBtn\n                    processing={processing}\n                    label=\"Create new domain\"\n                    className=\"w-full\"\n                />\n            </div>\n        </form>\n    );\n}\n"],"names":["Form","status","userRole","usePage","data","setData","post","processing","errors","reset","useForm","submit","e","toast","jsx","jsxs","LabelInputContainer","Link","Label","Select","visiblity","SelectTrigger","SelectValue","SelectContent","visibleOption","SelectItem","SubmitBtn"],"mappings":"+mBAkBwB,SAAAA,EAAK,CAAE,OAAAC,GAA+B,CAE1D,MAAMC,EADOC,EAAmB,EACV,MAAM,KAAK,KAAK,KAChC,CAAE,KAAAC,EAAM,QAAAC,EAAS,KAAAC,EAAM,WAAAC,EAAY,OAAAC,EAAQ,MAAAC,GAAUC,EAAQ,CAC/D,KAAM,GACN,UAAW,SAAA,CACd,EAEKC,EAA4BC,GAAM,CACpCA,EAAE,eAAe,EACjBN,EAAK,qBAAsB,CACvB,UAAW,IAAM,CACbO,EAAM,QAAQ,0BAA0B,EAClCJ,EAAA,CACV,EACA,QAAUD,GAAW,CACXK,EAAA,MAAML,EAAO,IAAI,CAAA,CAC3B,CACH,CACL,EAGI,OAAAM,EAAA,IAAC,QAAK,UAAU,oBAAoB,SAAUH,EAC1C,SAAAI,EAAA,KAAC,MAAI,CAAA,UAAU,4CACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACX,SAAA,CAAAD,EAAA,IAACE,EAAA,CACG,MAAM,SACN,YAAY,2CACZ,KAAK,MACL,MAAOZ,EAAK,KACZ,SAAWQ,GAAMP,EAAQ,OAAQO,EAAE,OAAO,KAAK,EAC/C,SAAQ,GACR,GAAG,YACH,WAAW,0BACX,aAAcJ,EAAO,KACrB,KAAMS,CAAA,CACV,EACCf,IAAa,iBACTa,OAAA,MAAA,CAAI,UAAU,GACX,SAAA,CAAAD,EAAAA,IAACI,GAAM,SAAO,SAAA,CAAA,EACdH,EAAA,KAACI,EAAA,CACG,MAAOf,EAAK,UACZ,cAAgBgB,GACZf,EAAQ,CAAE,GAAGD,EAAM,UAAAgB,EAAW,EAGlC,SAAA,CAAAN,EAAAA,IAACO,GAAc,UAAU,OACrB,eAACC,EAAY,CAAA,YAAY,gBAAgB,CAC7C,CAAA,QACCC,EAAc,CAAA,KAAK,MACf,SAAC,CAAA,UAAW,QAAQ,EAAE,IAClBC,GACGV,EAAA,IAACW,EAAA,CAEG,MAAOD,EAEN,SAAAA,CAAA,EAHIA,CAAA,CAIT,CAGZ,CAAA,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,EAER,EACAV,EAAA,IAACY,EAAA,CACG,WAAAnB,EACA,MAAM,oBACN,UAAU,QAAA,CAAA,CACd,CAAA,CACJ,CACJ,CAAA,CAER"}