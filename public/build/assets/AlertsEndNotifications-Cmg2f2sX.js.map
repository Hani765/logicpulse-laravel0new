{"version":3,"file":"AlertsEndNotifications-Cmg2f2sX.js","sources":["../../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../../resources/js/components/ui/switch.tsx","../../../resources/js/Pages/Settings/Profile/Partials/AlertsEndNotifications.tsx"],"sourcesContent":["\"use client\";\n\n// packages/react/switch/src/Switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? Boolean(button.closest(\"form\")) : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        BubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BubbleInput = (props) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n  React.useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, \"checked\");\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event(\"click\", { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  return /* @__PURE__ */ jsx(\n    \"input\",\n    {\n      type: \"checkbox\",\n      \"aria-hidden\": true,\n      defaultChecked: checked,\n      ...inputProps,\n      tabIndex: -1,\n      ref,\n      style: {\n        ...props.style,\n        ...controlSize,\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        opacity: 0,\n        margin: 0\n      }\n    }\n  );\n};\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { useForm } from \"@inertiajs/react\";\nimport useFetch from \"@/hooks/usefetch\";\n\ninterface NotificationsProp {\n    company_news: boolean;\n    account_activity: boolean;\n    meetups: boolean;\n    new_messages: boolean;\n}\n\nexport default function AlertsEndNotifications() {\n    const { data: notifications, isLoading: loading } = useFetch(\n        \"/update/NotifcationSettings\"\n    );\n    const { data, setData, processing, errors, patch } = useForm({\n        company_news: false,\n        account_activity: true,\n        meetups: false,\n        new_messages: true,\n    });\n\n    const handleSwitchChange = (key: keyof NotificationsProp) => {\n        setData((prev) => ({ ...prev, [key]: !prev[key] }));\n    };\n    return (\n        <Card>\n            <form>\n                <CardHeader>\n                    <CardTitle>Alerts &amp; Notifications</CardTitle>\n                    <CardTitle>\n                        You can set up Logicpulse to get notifications\n                    </CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                        <NotificationItem\n                            title=\"Company News\"\n                            description=\"Get Logicpulse news, announcements, and product updates\"\n                            checked={data.company_news}\n                            onChange={() => handleSwitchChange(\"company_news\")}\n                        />\n                        <NotificationItem\n                            title=\"Account Activity\"\n                            description=\"Get important notifications about you or activity you've missed\"\n                            checked={data.account_activity}\n                            onChange={() =>\n                                handleSwitchChange(\"account_activity\")\n                            }\n                        />\n                        <NotificationItem\n                            title=\"Meetups Near You\"\n                            description=\"Get an email when a Logicpulse Meetup is posted close to my location\"\n                            checked={data.meetups}\n                            onChange={() => handleSwitchChange(\"meetups\")}\n                        />\n                        <NotificationItem\n                            title=\"New Messages\"\n                            description=\"Get Logicpulse news, announcements, and product updates\"\n                            checked={data.new_messages}\n                            onChange={() => handleSwitchChange(\"new_messages\")}\n                        />\n                    </div>\n                </CardContent>\n            </form>\n        </Card>\n    );\n}\n\nconst NotificationItem: React.FC<{\n    title: string;\n    description: string;\n    checked: boolean;\n    onChange: () => void;\n}> = ({ title, description, checked, onChange }) => (\n    <div className=\"flex items-center justify-between py-4\">\n        <div className=\"flex flex-col flex-grow\">\n            <div className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {title}\n            </div>\n            <div className=\"text-base font-normal text-gray-500 dark:text-gray-400\">\n                {description}\n            </div>\n        </div>\n        <label className=\"relative flex items-center cursor-pointer\">\n            <Switch\n                checked={checked}\n                onCheckedChange={onChange}\n                aria-label={`Toggle ${title}`}\n            />\n        </label>\n    </div>\n);\n"],"names":["SWITCH_NAME","createSwitchContext","createSwitchScope","createContextScope","SwitchProvider","useSwitchContext","Switch","React.forwardRef","props","forwardedRef","__scopeSwitch","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","switchProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","checked","setChecked","useControllableState","jsxs","jsx","Primitive","getState","composeEventHandlers","event","prevChecked","BubbleInput","THUMB_NAME","SwitchThumb","thumbProps","context","control","bubbles","inputProps","ref","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","Root","Thumb","className","SwitchPrimitives.Root","cn","SwitchPrimitives.Thumb","AlertsEndNotifications","useFetch","data","setData","processing","errors","patch","useForm","handleSwitchChange","key","prev","Card","CardHeader","CardTitle","CardContent","NotificationItem","title","description","onChange"],"mappings":"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","x_google_ignoreList":[0]}