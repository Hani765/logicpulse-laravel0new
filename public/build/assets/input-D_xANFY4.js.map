{"version":3,"file":"input-D_xANFY4.js","sources":["../../../node_modules/framer-motion/dist/es/value/use-motion-template.mjs","../../../resources/js/components/ui/input.tsx"],"sourcesContent":["import { useCombineMotionValues } from './use-combine-values.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value) {\n                output += isMotionValue(value) ? value.get() : value;\n            }\n        }\n        return output;\n    }\n    return useCombineMotionValues(values.filter(isMotionValue), buildValue);\n}\n\nexport { useMotionTemplate };\n","// Input component extends from shadcnui - https://ui.shadcn.com/docs/components/input\n\"use client\";\nimport * as React from \"react\";\nimport { useMotionTemplate, useMotionValue, motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n    extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n    ({ className, type, ...props }, ref) => {\n        const radius = 100; // change this to increase the rdaius of the hover effect\n        const [visible, setVisible] = React.useState(false);\n\n        let mouseX = useMotionValue(0);\n        let mouseY = useMotionValue(0);\n\n        function handleMouseMove({ currentTarget, clientX, clientY }: any) {\n            let { left, top } = currentTarget.getBoundingClientRect();\n\n            mouseX.set(clientX - left);\n            mouseY.set(clientY - top);\n        }\n        return (\n            <motion.div\n                style={{\n                    background: useMotionTemplate`\n        radial-gradient(\n          ${visible ? radius + \"px\" : \"0px\"} circle at ${mouseX}px ${mouseY}px,\n          hsl(var(--primary)),\n          transparent 80%\n        )\n      `,\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseEnter={() => setVisible(true)}\n                onMouseLeave={() => setVisible(false)}\n                className=\"group/input rounded-lg p-[2px] transition duration-300\"\n            >\n                <input\n                    type={type}\n                    className={cn(\n                        `dark:placeholder-text-neutral-600 duration-400 flex h-10 w-full rounded-sm border bg-gray-50 px-3 py-2 text-sm text-black shadow-input transition file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-neutral-400 focus-visible:outline-none focus-visible:ring-[2px] focus-visible:ring-primary disabled:cursor-not-allowed disabled:opacity-50 group-hover/input:shadow-none dark:bg-gray-800 dark:text-white dark:shadow-[0px_0px_1px_1px_var(--neutral-700)] dark:focus-visible:ring-primary`,\n                        className\n                    )}\n                    ref={ref}\n                    {...props}\n                />\n            </motion.div>\n        );\n    }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":["useMotionTemplate","fragments","values","numFragments","buildValue","output","i","value","isMotionValue","useCombineMotionValues","Input","React.forwardRef","className","type","props","ref","visible","setVisible","React.useState","mouseX","useMotionValue","mouseY","handleMouseMove","currentTarget","clientX","clientY","left","top","jsx","motion","cn"],"mappings":"+JAyBA,SAASA,EAAkBC,KAAcC,EAAQ,CAI7C,MAAMC,EAAeF,EAAU,OAC/B,SAASG,GAAa,CAClB,IAAIC,EAAS,GACb,QAASC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CACnCD,GAAUJ,EAAUK,CAAC,EACrB,MAAMC,EAAQL,EAAOI,CAAC,EAClBC,IACAF,GAAUG,EAAcD,CAAK,EAAIA,EAAM,IAAK,EAAGA,EAE/D,CACQ,OAAOF,CACf,CACI,OAAOI,EAAuBP,EAAO,OAAOM,CAAa,EAAGJ,CAAU,CAC1E,CCjCA,MAAMM,EAAQC,EAAM,WAChB,CAAC,CAAE,UAAAC,EAAW,KAAAC,EAAM,GAAGC,CAAA,EAASC,IAAQ,CAEpC,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAe,EAAK,EAE9C,IAAAC,EAASC,EAAe,CAAC,EACzBC,EAASD,EAAe,CAAC,EAE7B,SAASE,EAAgB,CAAE,cAAAC,EAAe,QAAAC,EAAS,QAAAC,GAAgB,CAC/D,GAAI,CAAE,KAAAC,EAAM,IAAAC,GAAQJ,EAAc,sBAAsB,EAEjDJ,EAAA,IAAIK,EAAUE,CAAI,EAClBL,EAAA,IAAII,EAAUE,CAAG,CAAA,CAGxB,OAAAC,EAAA,IAACC,EAAO,IAAP,CACG,MAAO,CACH,WAAY7B;AAAA;AAAA,YAEpBgB,EAAU,QAAgB,KAAK,cAAcG,CAAM,MAAME,CAAM;AAAA;AAAA;AAAA;AAAA,OAK3D,EACA,YAAaC,EACb,aAAc,IAAML,EAAW,EAAI,EACnC,aAAc,IAAMA,EAAW,EAAK,EACpC,UAAU,yDAEV,SAAAW,EAAA,IAAC,QAAA,CACG,KAAAf,EACA,UAAWiB,EACP,ggBACAlB,CACJ,EACA,IAAAG,EACC,GAAGD,CAAA,CAAA,CACR,CACJ,CAAA,CAGZ,EACAJ,EAAM,YAAc","x_google_ignoreList":[0]}