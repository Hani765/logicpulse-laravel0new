{"version":3,"file":"Step1-BLMVgaxs.js","sources":["../../../resources/js/Pages/Offers/components/update/steps/Step1.tsx"],"sourcesContent":["import { LabelInputContainer } from \"@/components/ui/LabelInputContainer\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"sonner\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Head } from \"@inertiajs/react\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport InputError from \"@/components/InputError\";\r\nimport { z } from \"zod\";\r\nimport ImageUploader from \"@/components/ui/image-uploader\";\r\n\r\ninterface StepProps {\r\n    formData: any;\r\n    errors: any;\r\n    setFormData: (data: any) => void;\r\n    currentStep: number;\r\n    setCurrentStep: any;\r\n}\r\nexport const step1Schema = z.object({\r\n    title: z.string().min(1, \"Title is required.\"),\r\n    description: z.string().min(1, \"Description is required.\"),\r\n});\r\nconst Step1: React.FC<StepProps> = ({\r\n    formData,\r\n    setFormData,\r\n    errors,\r\n    currentStep,\r\n    setCurrentStep,\r\n}) => {\r\n    const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n    const validateForm = () => {\r\n        // Perform full validation\r\n        const validation = step1Schema.safeParse(formData);\r\n        if (!validation.success) {\r\n            const formattedErrors = validation.error.format();\r\n            setValidationErrors({\r\n                title: formattedErrors.title?._errors[0] || null,\r\n                description: formattedErrors.description?._errors[0] || null,\r\n            });\r\n            return false;\r\n        }\r\n        setValidationErrors({});\r\n        return true;\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        // Validate form data before proceeding to the next step\r\n        if (validateForm()) {\r\n            setCurrentStep(currentStep + 1);\r\n        } else {\r\n            toast.error(\"Please fix the validation errors.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Head title=\"Basic Information\" />\r\n            <AnimatePresence>\r\n                <motion.div\r\n                    className=\"mt-4 space-y-2\"\r\n                    initial={{ opacity: 0, y: 50 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    exit={{ opacity: 0, y: 50 }}\r\n                    transition={{ duration: 0.5 }}\r\n                >\r\n                    <h3 className=\"font-semibold\">Metadata Details:</h3>\r\n                    <div className=\"bg-white dark:bg-slate-900 p-2 rounded\">\r\n                        <LabelInputContainer\r\n                            label=\"Title\"\r\n                            helperText=\"eg: Offer 1 - An awesome offer\"\r\n                            type=\"text\"\r\n                            value={formData.title}\r\n                            errorMessage={\r\n                                validationErrors.title || errors.title || \"\"\r\n                            }\r\n                            onChange={(e) =>\r\n                                setFormData({\r\n                                    ...formData,\r\n                                    title: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"bg-white dark:bg-slate-900 p-2 rounded\">\r\n                        <Label>Description</Label>\r\n                        <Textarea\r\n                            value={formData.description}\r\n                            placeholder=\"Something about offer....\"\r\n                            onChange={(e) =>\r\n                                setFormData({\r\n                                    ...formData,\r\n                                    description: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <InputError\r\n                            message={\r\n                                errors.description ||\r\n                                validationErrors.description\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"bg-white dark:bg-slate-900 p-2 rounded flex justify-between items-center\">\r\n                        <div className=\"\">\r\n                            <Label>Upload or Change Image</Label>\r\n                            <p className=\"text-sm\">\r\n                                Upload a new image for this offer meta!\r\n                            </p>\r\n                        </div>\r\n                        <ImageUploader\r\n                            selected_image={formData.image}\r\n                            onUpload={(path: string) =>\r\n                                setFormData({ ...formData, image: path })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"bg-white dark:bg-slate-900 p-2 rounded\">\r\n                        <Label>Image</Label>\r\n                        <img\r\n                            src={formData.image}\r\n                            alt={formData.image}\r\n                            className=\"w-full h-[400px]\"\r\n                        />\r\n                        <InputError message={errors.image} />\r\n                    </div>\r\n\r\n                    <div className=\"flex w-full justify-end items-center mt-4\">\r\n                        <Button onClick={handleNextClick} className=\"mr-2\">\r\n                            Next\r\n                        </Button>\r\n                    </div>\r\n                </motion.div>\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Step1;\r\n"],"names":["step1Schema","z","Step1","formData","setFormData","errors","currentStep","setCurrentStep","validationErrors","setValidationErrors","useState","validateForm","validation","formattedErrors","_a","_b","handleNextClick","toast","jsx","Head","AnimatePresence","jsxs","motion","LabelInputContainer","e","Label","Textarea","InputError","ImageUploader","path","Button"],"mappings":"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"}